#
# SELinux policy module RPM build
#
name: "Build RPM to install SELinux policy module"

on:
  release:
    types: [ published ]
      
jobs:
  build:
    name: Create RPM Release
    
    runs-on: ubuntu-latest
    
    env:
      SEMODULE: springboot

    steps:

      - name: Checkout code
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}
          
      - name: Prepare RPM spec file
        run: |
            version_from_tag=$( echo "${{ github.ref_name }}" | sed -E 's,^v?([0-9]+\.[0-9]+\.[0-9]+).*$,\1,' )
            
            version_from_semodule=$( awk '
                /^[[:blank:]]*module[[:blank:]]+/ {
                  sub("[[:blank:]]*;$", "")
                  module_vers=$3
                }
                /^[[:blank:]]*policy_module[[:blank:]]*\(/ {
                  sub("^[[:blank:]]*policy_module[^,]+,[[:blank:]]*", "")
                  sub("[[:blank:]]*)[[:blank:]]*$", "")
                  module_vers=$0
                }
                END {
                  print module_vers
                }' se_module/${SEMODULE}.te )
            
            if [ -n "${version_from_tag}" -a -n "${version_from_semodule}" -a "${version_from_tag}" = "${version_from_semodule}" ]
            then
                echo "::notice title=RPMspec::Replacing the SELinux module version (${version_from_semodule}) in the RPM spec file."
                sed -i -E "s,#\{version\}#,${version_from_semodule}," rpm/selinux_${SEMODULE}.spec
            else
              [ -z "${version_from_tag}" ] && echo "::error title=FATAL::Tag does look like a valid version."
              [ -z "${version_from_semodule}" ] && echo "::error title=FATAL:: Could not get SELinux module version."
              [ "${version_from_tag}" = "${version_from_semodule}" ] || echo "::error title=FATAL:: Tag version (${version_from_tag} does match SELinux module version (${version_from_tag})."
              exit 127
            fi
            
      - name: build RPM package
        id: rpm_build
        uses: naveenrajm7/rpmbuild@master
        with:
          spec_file: "rpm/selinux_${SEMODULE}.spec"

      - name: Get binary RPM package characteritics
        id: get_binrpm_chars
        run: |
          rpm_arch=$( awk '/^BuildArch/ { print $NF }' rpm/selinux_${SEMODULE}.spec )
          rpm_name=$( awk '/^Name/      { print $NF }' rpm/selinux_${SEMODULE}.spec )
          rpm_vers=$( awk '/^Version/      { print $NF }' rpm/selinux_${SEMODULE}.spec )
          rpm_file_path=$( ls ${{ steps.rpm_build.outputs.rpm_dir_path }}/${rpm_arch}/${rpm_name}-${rpm_vers}*.${rpm_arch}.rpm )
          rpm_file_name=$( basename ${rpm_file_path} )
          rpm_file_256sum=$( sha256sum ${rpm_file_path} | cut -d " " -f 1 )
          rpm_file_512sum=$( sha512sum ${rpm_file_path} | cut -d " " -f 1 )
          echo "::set-output name=rpm_arch::${rpm_arch}"
          echo "::set-output name=rpm_file_path::${rpm_file_path}"
          echo "::set-output name=rpm_file_name::${rpm_file_name}"
          echo "::set-output name=rpm_file_256sum::${rpm_file_256sum}"
          echo "::set-output name=rpm_file_512sum::${rpm_file_512sum}"
          
          # create checksum files
          echo "${rpm_file_256sum}" > ${rpm_file_name}.SHA256
          echo "${rpm_file_512sum}" > ${rpm_file_name}.SHA512
            
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ steps.get_binrpm_chars.outputs.rpm_file_path }}
          asset_name: ${{ steps.get_binrpm_chars.outputs.rpm_file_name }}
          asset_content_type: ${{ steps.rpm_build.outputs.rpm_content_type }}

      - name: Upload Release Asset SHA256
        id: upload-release-asset_sha256 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ steps.get_binrpm_chars.outputs.rpm_file_name }}.SHA256
          asset_name: ${{ steps.get_binrpm_chars.outputs.rpm_file_name }}.SHA256.txt
          asset_content_type: text/plain

      - name: Upload Release Asset SHA512
        id: upload-release-asset_sha512 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ steps.get_binrpm_chars.outputs.rpm_file_name }}.SHA512
          asset_name: ${{ steps.get_binrpm_chars.outputs.rpm_file_name }}.SHA512.txt
          asset_content_type: text/plain
